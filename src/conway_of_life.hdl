module top_module(
    input clk,
    input load,
    input [255:0] data,
    output [255:0] q ); 

   integer 	   i;
   wire [324:0]    b;
   
   assign b = {q[0], q[15:0]	      ,q[15],	 
	       q[240], q[255:240]   , q[255],
	       q[224], q[239:224]   , q[239],
	       q[208], q[223:208]   , q[223],
	       q[192], q[207:192]   , q[207],
	       q[176], q[191:176]   , q[191],
	       q[160], q[175:160]   , q[175],
	       q[144], q[159:144]   , q[159],
	       q[128], q[143:128]   , q[143],
	       q[112], q[127:112]   , q[127],
	       q[96] , q[111:96]    , q[111],
	       q[80] , q[95 :80]    , q[95 ],
	       q[64] , q[79 :64]    , q[79 ],
	       q[48] , q[63 :48]    , q[63 ],
	       q[32] , q[47 :32]    , q[47 ],
	       q[16] , q[31 :16]    , q[31 ],
	       q[0]  , q[15 :0]     , q[15 ],
	       q[240],q[255:240], q[255]};
   


   always@(posedge clk) begin
      
      if(load) begin  ;
	 q <= data;	 
      end
      else begin
	 for ( i = 0 ; i < 256; i++)
	   q[i] =    b[20 + i-1]
		   + b[20 + i+1]
		   + b[20 + i-16] 
		   + b[20 + i-15] 
		   + b[20 + i-17] 
		   + b[20 + i+16]
		   + b[20 + i+15] 
		   + b[20 + i+17]  
		   == 3 ? 1 : 0;

      end      
   end
   
endmodule

/* -----\/----- EXCLUDED -----\/-----

 b[i-1]
		   + b[i+1]
		   + b[i-16] 
		   + b[i-15] 
		   + b[i-17] 
		   + b[i+16]
		   + b[i+15] 
		   + b[i+17]  
		   == 3 ? 1 : 0;
 -----/\----- EXCLUDED -----/\----- */

/* -----\/----- EXCLUDED -----\/-----
   assign r0 = q[15:0];
   assign r1 = q[31:16];
   assign r2 = q[47:32];
   assign r3 = q[63:48];
   assign r4 = q[79:64];
   assign r5 = q[95:80];
   assign r6 = q[111:96];
   assign r7 = q[127:112];
   assign r8 = q[143:128];
   assign r9 = q[159:144];
   assign r10 = q[175:160];
   assign r11 = q[191:176];
   assign r12 = q[207:192];
   assign r13 = q[223:208];
   assign r14 = q[239:224];
   assign r15 = q[255:240];
 -----/\----- EXCLUDED -----/\----- */
/* -----\/----- EXCLUDED -----\/-----

	   q[i] =  (  i % 16 == 0 ?  q[i+15] : q[i-1])
		   + (((i + 1) % 16) == 0 ? q[i-15] : q[i+1])
		   + ( i - 16 < 0 ? q[240+i]: q[i-16] )
		   + q[i-15] 
		   + q[i-17] 
		   + ( (i+16 > 255)? q[i+16 % 255] : q[i+16] )
		   + q[i+15] 
		   + q[i+17]  
 -----/\----- EXCLUDED -----/\----- */
