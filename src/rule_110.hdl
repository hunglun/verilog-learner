module top_module(
    input clk,
    input load,
    input [511:0] data,
    output [511:0] q ); 


   wire  [511:0]	   left_q, right_q;
   
   assign left_q = {1'b0,q[511:1]};
   assign right_q = {q[510:0],1'b0};
   
   
   always@(posedge clk) begin
      if(load) q <= data;
      else begin	 
	 q <= (left_q & q & ~right_q) |
	      (left_q & ~q & right_q)|
	      (~left_q & q & right_q)|
	      (~left_q & q & ~right_q)|
	      (~left_q & ~q & right_q);
      end // else: !if(load)
   end // always@ (posedge clk)

endmodule

